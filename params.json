{"name":"Ladoga","tagline":"Lightweight HTTP server framework written in Objective-C.","body":"[![Travis CI](https://api.travis-ci.org/aperechnev/Ladoga.svg?branch=develop)](https://travis-ci.org/aperechnev/Ladoga) [![CocoaPods](https://img.shields.io/cocoapods/v/Ladoga.svg)](http://cocoapods.org/pods/Ladoga) ![CocoaPods](https://img.shields.io/cocoapods/p/Ladoga.svg) [![CocoaDocs](https://img.shields.io/cocoapods/metrics/doc-percent/Ladoga.svg)](http://cocoadocs.org/docsets/Ladoga/)\r\n\r\n**Ladoga** is a lightweight and easy-to-use HTTP framework that makes it possible to write web-applications in Objective-C. It provides simple API letting you to concentrate on you bussiness logic, instead of spending your time on low-level details.\r\n\r\n## Installation\r\n\r\nThe easiest way to start development using **Ladoga** framework is to install it via CocoaPods. Just add it to your `Podfile`:\r\n\r\n```Podspec\r\nsource 'https://github.com/CocoaPods/Specs.git'\r\nplatform :ios, '8.0'\r\n\r\npod 'Ladoga'\r\n```\r\n\r\n## Getting started\r\n\r\n### Basic example\r\n\r\nThe basic example is easy enough, so you can start making you web applications right now.\r\n\r\n###### MyServerExample.h\r\n```Objective-C\r\n#import <Foundation/Foundation.h>\r\n#import <Ladoga/Ladoga.h>\r\n\r\n@interface MyServerExample : NSObject\r\n- (void)start;\r\n@end\r\n```\r\n\r\n###### MyServerExample.m\r\n```Objective-C\r\n#import \"MyServerExample.h\"\r\n\r\n@implementation MyServerExample\r\n\r\n- (void)start {\r\n    LDHTTPServer *server = [[LDHTTPServer alloc] initWithAddress:@\"127.0.0.1\"\r\n                                                         andPort:8081];\r\n    LDHTTPRequestHandler *mainPageHandler = [[LDHTTPRequestHandler alloc] initWithHandler:self\r\n                                                                                 selector:@selector(mainPage:)\r\n                                                                                  methods:@[ @(LDHTTPMethodGET) ]];\r\n    [server addRequestHandler:mainPageHandler forPath:@\"/index.html\"];\r\n    [server startWithRunLoop:CFRunLoopGetMain()];\r\n    CFRunLoopRun();\r\n}\r\n\r\n- (LDHTTPResponse *)mainPage:(LDHTTPRequest *)request {\r\n    LDHTTPResponse *response = [[LDHTTPResponse alloc] init];\r\n    [response addValue:@\"text/html;charset=utf-8\" forHTTPHeader:@\"Content-Type\"];\r\n    response.body = @\"<html><head><title>My Example</title></head><body>Hello, world!</body></html>\";\r\n    return response;\r\n}\r\n\r\n@end\r\n```\r\n\r\n### Templates\r\n\r\n**Ladoga** also provides template system via `LDHTMLTemplate` class. You can specify your templates with some variables, and then render it with actual values.\r\n\r\nLet's say that we have the following template with `PageTitle` and `Username` variables:\r\n\r\n```HTML\r\n<html>\r\n<head><title>{{ PageTitle }}</title></head>\r\n<body>Hello, {{ Username }}!</body>\r\n</html>\r\n```\r\n\r\nSo, to render this template, we have to use `renderTemplateAtPath:withParameters:` class method:\r\n\r\n```Objective-C\r\nNSDictionary *params = @{ @\"PageTitle\": @\"Test Page\",\r\n                          @\"Username\": @\"John\" };\r\n    \r\nNSString *templatePath = [[[NSBundle bundleForClass:[self class]] resourcePath] stringByAppendingPathComponent:@\"index.html\"];\r\n    \r\nNSString *resultHTML = [LDHTMLTemplate renderTemplateAtPath:templatePath\r\n                                             withParameters:params];\r\n```\r\n\r\nAnd as a result, we have a string that contains the code of rendered HTML page:\r\n\r\n```HTML\r\n<html>\r\n<head><title>Test Page</title></head>\r\n<body>Hello, John!</body>\r\n</html>\r\n```\r\n\r\n## How To Contribute\r\n\r\nIf you want to help to develop **Ladoga**, your pull requests are welcome. Please follow the `git-flow` notation and make sure that all tests are passed before making a pull-request. Btw, every line of code should be covered by tests. All warnings should be fixed as well.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}